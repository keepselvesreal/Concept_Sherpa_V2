{
  "question_index": 9,
  "original_question": {
    "category": "practical_gaps",
    "gap_description": "세션 간 컨텍스트 유지 방법이 불분명함",
    "question": "멀티클로딩에서 각 Claude 세션이 독립적으로 작업하면서도 전체 프로젝트의 컨텍스트를 공유하거나 동기화하는 방법은 무엇인가?",
    "expected_benefit": "여러 세션이 일관된 코드베이스 이해도를 유지하면서도 충돌 없이 작업할 수 있는 컨텍스트 관리 전략을 수립할 수 있음"
  },
  "answer": "태수야, 멀티클로딩에서 각 Claude 세션 간 컨텍스트 공유와 동기화에 대해 참고 문서를 바탕으로 실용적인 방법들을 정리해줄게.\n\n## 핵심 전략들\n\n### 1. CLAUDE.md 파일을 통한 중앙 집중식 컨텍스트 관리\n참고 문서 ref1.md에서 나온 내용인데, **CLAUDE.md 파일에 투자하면 출력 품질이 극적으로 향상된다**고 명시되어 있어. 이 파일을 각 세션이 공유하는 \"컨텍스트 허브\"로 활용할 수 있어:\n\n- 코드 아키텍처 정보\n- 프로젝트별 함정과 주의사항  \n- 모범 사례와 코딩 스타일\n- 현재 작업 상태와 우선순위\n\n### 2. 역할 분리를 통한 세션 전문화\nref1.md와 ref2.md 모두에서 언급된 실제 사용 패턴이야:\n\n**질문 전용 세션 + 코드 편집 세션 분리**\n- 하나는 질문만 하고 코드는 건드리지 않게 설정\n- 다른 하나는 실제 코드 편집만 담당\n- 이렇게 하면 서로 충돌하지 않으면서도 정보는 공유 가능\n\n### 3. Git 브랜치 기반 작업 분할\nref2.md Line 46-48에서 나온 실제 패턴:\n\n**각각 다른 브랜치나 Git repo 복사본에서 작업**\n- 각 세션이 독립적인 브랜치에서 작업\n- 하나가 막히면 다른 걸로 바로 전환\n- Git을 통해 자연스럽게 작업 내역 동기화\n\n### 4. 커스텀 훅(Hooks)을 활용한 자동화\nref1.md에서 언급된 방법:\n\n```bash\n# 예시: 커밋 전 자동 린트 실행\n# 각 세션의 변경사항이 일관된 품질 유지\n```\n\n### 5. 특화 에이전트 패턴 활용\nref1.md에서 실제 사례로 나온 것들:\n\n- **보안 에이전트**: 보안 관련 검토만 담당\n- **인시던트 대응 에이전트**: 버그 수정 전담\n- **아키텍처 리뷰 에이전트**: 설계 검토 전담\n\n## 실용적인 구현 방법\n\n### A. 컨텍스트 동기화 워크플로우\n1. 메인 CLAUDE.md에 현재 작업 상태 기록\n2. 각 세션 시작 시 이 파일부터 확인\n3. 작업 완료 시 결과를 CLAUDE.md에 업데이트\n\n### B. 세션 간 커뮤니케이션 패턴\nref2.md Line 67-72에서 Cat이 강조한 \"명확한 커뮤니케이션\" 원칙을 세션 간에도 적용:\n\n- 각 세션의 목적과 제약사항을 명확히 정의\n- 결과 평가 기준을 공유 문서에 명시\n- 예상치 못한 동작 시 다른 세션에 \"왜 그렇게 생각했어?\" 질문\n\n### C. 실제 활용 시나리오\n```\n세션 1 (설계): plan mode로 전체 아키텍처 분석\n세션 2 (구현): auto-accept mode로 빠른 코딩\n세션 3 (검증): 테스트와 품질 검토 전담\n```\n\n**핵심은 각 세션을 완전히 독립적으로 운영하되, CLAUDE.md 파일과 Git을 통해 필요한 컨텍스트만 선택적으로 공유하는 거야.** \n\n이런 방식으로 하면 세션 간 충돌 없이도 전체 프로젝트 일관성을 유지할 수 있어. 특히 ref2.md Line 44-48에서 나온 것처럼, 회사 규모나 팀 성향에 따라 auto-accept와 plan mode를 적절히 조합해서 쓰면 더 효과적이야.",
  "reference_documents": [
    "/home/nadle/projects/Concept_Sherpa_V2/25-08-23/ref1.md",
    "/home/nadle/projects/Concept_Sherpa_V2/25-08-23/ref2.md"
  ],
  "metadata": {
    "cost": 0.06118875,
    "timestamp": "2025-08-23T15:51:47.751696",
    "status": "success"
  }
}