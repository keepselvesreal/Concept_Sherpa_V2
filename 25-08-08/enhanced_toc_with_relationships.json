[
  {
    "title": "Part 1â€”Flexibility",
    "level": 0,
    "start_page": 29,
    "end_page": 164,
    "page_count": 136,
    "id": 0,
    "parent_id": null,
    "children_ids": [
      1,
      2,
      17,
      25,
      33,
      43,
      51
    ],
    "is_added_node": false
  },
  {
    "title": "Part 1 Introduction",
    "level": 1,
    "start_page": 29,
    "end_page": 31,
    "page_count": 3,
    "id": 1,
    "parent_id": 0,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "1 Complexity of object- oriented programming",
    "level": 1,
    "start_page": 31,
    "end_page": 53,
    "page_count": 23,
    "id": 2,
    "parent_id": 0,
    "children_ids": [
      3,
      4,
      10,
      16
    ],
    "is_added_node": false
  },
  {
    "title": "1 Introduction",
    "level": 2,
    "start_page": 31,
    "end_page": 32,
    "page_count": 2,
    "id": 3,
    "parent_id": 2,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "1.1 OOP design: Classic or classical?",
    "level": 2,
    "start_page": 32,
    "end_page": 40,
    "page_count": 9,
    "id": 4,
    "parent_id": 2,
    "children_ids": [
      5,
      6,
      7,
      8,
      9
    ],
    "is_added_node": false
  },
  {
    "title": "1.1 Introduction",
    "level": 3,
    "start_page": 32,
    "end_page": 33,
    "page_count": 2,
    "id": 5,
    "parent_id": 4,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "1.1.1 The design phase",
    "level": 3,
    "start_page": 32,
    "end_page": 33,
    "page_count": 2,
    "id": 6,
    "parent_id": 4,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.1.2 UML 101",
    "level": 3,
    "start_page": 34,
    "end_page": 36,
    "page_count": 3,
    "id": 7,
    "parent_id": 4,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.1.3 Explaining each piece of the class diagram",
    "level": 3,
    "start_page": 37,
    "end_page": 39,
    "page_count": 3,
    "id": 8,
    "parent_id": 4,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.1.4 The implementation phase",
    "level": 3,
    "start_page": 40,
    "end_page": 40,
    "page_count": 1,
    "id": 9,
    "parent_id": 4,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.2 Sources of complexity",
    "level": 2,
    "start_page": 41,
    "end_page": 51,
    "page_count": 11,
    "id": 10,
    "parent_id": 2,
    "children_ids": [
      11,
      12,
      13,
      14,
      15
    ],
    "is_added_node": false
  },
  {
    "title": "1.2 Introduction",
    "level": 3,
    "start_page": 41,
    "end_page": 42,
    "page_count": 2,
    "id": 11,
    "parent_id": 10,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "1.2.1 Many relations between classes",
    "level": 3,
    "start_page": 42,
    "end_page": 43,
    "page_count": 2,
    "id": 12,
    "parent_id": 10,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.2.2 Unpredictable code behavior",
    "level": 3,
    "start_page": 44,
    "end_page": 45,
    "page_count": 2,
    "id": 13,
    "parent_id": 10,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.2.3 Not trivial data serialization",
    "level": 3,
    "start_page": 46,
    "end_page": 47,
    "page_count": 2,
    "id": 14,
    "parent_id": 10,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "1.2.4 Complex class hierarchies",
    "level": 3,
    "start_page": 48,
    "end_page": 51,
    "page_count": 4,
    "id": 15,
    "parent_id": 10,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 52,
    "end_page": 53,
    "page_count": 2,
    "id": 16,
    "parent_id": 2,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "2 Separation between code and data",
    "level": 1,
    "start_page": 54,
    "end_page": 70,
    "page_count": 17,
    "id": 17,
    "parent_id": 0,
    "children_ids": [
      18,
      19,
      20,
      21,
      22,
      23,
      24
    ],
    "is_added_node": false
  },
  {
    "title": "2 Introduction",
    "level": 2,
    "start_page": 54,
    "end_page": 55,
    "page_count": 2,
    "id": 18,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "2.1 The two parts of a DOP system",
    "level": 2,
    "start_page": 55,
    "end_page": 56,
    "page_count": 2,
    "id": 19,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "2.2 Data entities",
    "level": 2,
    "start_page": 57,
    "end_page": 58,
    "page_count": 2,
    "id": 20,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "2.3 Code modules",
    "level": 2,
    "start_page": 59,
    "end_page": 63,
    "page_count": 5,
    "id": 21,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "2.4 DOP systems are easy to understand",
    "level": 2,
    "start_page": 64,
    "end_page": 65,
    "page_count": 2,
    "id": 22,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "2.5 DOP systems are flexible",
    "level": 2,
    "start_page": 66,
    "end_page": 69,
    "page_count": 4,
    "id": 23,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 70,
    "end_page": 70,
    "page_count": 1,
    "id": 24,
    "parent_id": 17,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "3 Basic data manipulation",
    "level": 1,
    "start_page": 71,
    "end_page": 98,
    "page_count": 28,
    "id": 25,
    "parent_id": 0,
    "children_ids": [
      26,
      27,
      28,
      29,
      30,
      31,
      32
    ],
    "is_added_node": false
  },
  {
    "title": "3 Introduction",
    "level": 2,
    "start_page": 71,
    "end_page": 72,
    "page_count": 2,
    "id": 26,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "3.1 Designing a data model",
    "level": 2,
    "start_page": 72,
    "end_page": 75,
    "page_count": 4,
    "id": 27,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "3.2 Representing records as maps",
    "level": 2,
    "start_page": 76,
    "end_page": 81,
    "page_count": 6,
    "id": 28,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "3.3 Manipulating data with generic functions",
    "level": 2,
    "start_page": 82,
    "end_page": 85,
    "page_count": 4,
    "id": 29,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "3.4 Calculating search results",
    "level": 2,
    "start_page": 86,
    "end_page": 92,
    "page_count": 7,
    "id": 30,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "3.5 Handling records of different types",
    "level": 2,
    "start_page": 93,
    "end_page": 96,
    "page_count": 4,
    "id": 31,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 97,
    "end_page": 98,
    "page_count": 2,
    "id": 32,
    "parent_id": 25,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4 State management",
    "level": 1,
    "start_page": 99,
    "end_page": 118,
    "page_count": 20,
    "id": 33,
    "parent_id": 0,
    "children_ids": [
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42
    ],
    "is_added_node": false
  },
  {
    "title": "4 Introduction",
    "level": 2,
    "start_page": 99,
    "end_page": 100,
    "page_count": 2,
    "id": 34,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "4.1 Multiple versions of the system data",
    "level": 2,
    "start_page": 100,
    "end_page": 101,
    "page_count": 2,
    "id": 35,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4.2 Structural sharing",
    "level": 2,
    "start_page": 102,
    "end_page": 107,
    "page_count": 6,
    "id": 36,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4.3 Implementing structural sharing",
    "level": 2,
    "start_page": 108,
    "end_page": 109,
    "page_count": 2,
    "id": 37,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4.4 Data safety",
    "level": 2,
    "start_page": 110,
    "end_page": 110,
    "page_count": 1,
    "id": 38,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4.5 The commit phase of a mutation",
    "level": 2,
    "start_page": 111,
    "end_page": 112,
    "page_count": 2,
    "id": 39,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4.6 Ensuring system state integrity",
    "level": 2,
    "start_page": 113,
    "end_page": 113,
    "page_count": 1,
    "id": 40,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "4.7 Restoring previous states",
    "level": 2,
    "start_page": 114,
    "end_page": 116,
    "page_count": 3,
    "id": 41,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 117,
    "end_page": 118,
    "page_count": 2,
    "id": 42,
    "parent_id": 33,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "5 Basic concurrency control",
    "level": 1,
    "start_page": 119,
    "end_page": 137,
    "page_count": 19,
    "id": 43,
    "parent_id": 0,
    "children_ids": [
      44,
      45,
      46,
      47,
      48,
      49,
      50
    ],
    "is_added_node": false
  },
  {
    "title": "5 Introduction",
    "level": 2,
    "start_page": 119,
    "end_page": 120,
    "page_count": 2,
    "id": 44,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "5.1 Optimistic concurrency control",
    "level": 2,
    "start_page": 120,
    "end_page": 121,
    "page_count": 2,
    "id": 45,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "5.2 Reconciliation between concurrent mutations",
    "level": 2,
    "start_page": 122,
    "end_page": 124,
    "page_count": 3,
    "id": 46,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "5.3 Reducing collections",
    "level": 2,
    "start_page": 125,
    "end_page": 126,
    "page_count": 2,
    "id": 47,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "5.4 Structural difference",
    "level": 2,
    "start_page": 127,
    "end_page": 133,
    "page_count": 7,
    "id": 48,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "5.5 Implementing the reconciliation algorithm",
    "level": 2,
    "start_page": 134,
    "end_page": 135,
    "page_count": 2,
    "id": 49,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 136,
    "end_page": 137,
    "page_count": 2,
    "id": 50,
    "parent_id": 43,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "6 Unit tests",
    "level": 1,
    "start_page": 138,
    "end_page": 164,
    "page_count": 27,
    "id": 51,
    "parent_id": 0,
    "children_ids": [
      52,
      53,
      54,
      59,
      60,
      61,
      62
    ],
    "is_added_node": false
  },
  {
    "title": "6 Introduction",
    "level": 2,
    "start_page": 138,
    "end_page": 139,
    "page_count": 2,
    "id": 52,
    "parent_id": 51,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "6.1 The simplicity of data-oriented test cases",
    "level": 2,
    "start_page": 138,
    "end_page": 139,
    "page_count": 2,
    "id": 53,
    "parent_id": 51,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "6.2 Unit tests for data manipulation code",
    "level": 2,
    "start_page": 140,
    "end_page": 148,
    "page_count": 9,
    "id": 54,
    "parent_id": 51,
    "children_ids": [
      55,
      56,
      57,
      58
    ],
    "is_added_node": false
  },
  {
    "title": "6.2 Introduction",
    "level": 3,
    "start_page": 140,
    "end_page": 141,
    "page_count": 2,
    "id": 55,
    "parent_id": 54,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "6.2.1 The tree of function calls",
    "level": 3,
    "start_page": 141,
    "end_page": 142,
    "page_count": 2,
    "id": 56,
    "parent_id": 54,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "6.2.2 Unit tests for functions down the tree",
    "level": 3,
    "start_page": 143,
    "end_page": 146,
    "page_count": 4,
    "id": 57,
    "parent_id": 54,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "6.2.3 Unit tests for nodes in the tree",
    "level": 3,
    "start_page": 147,
    "end_page": 148,
    "page_count": 2,
    "id": 58,
    "parent_id": 54,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "6.3 Unit tests for queries",
    "level": 2,
    "start_page": 149,
    "end_page": 153,
    "page_count": 5,
    "id": 59,
    "parent_id": 51,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "6.4 Unit tests for mutations",
    "level": 2,
    "start_page": 154,
    "end_page": 161,
    "page_count": 8,
    "id": 60,
    "parent_id": 51,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Moving forward",
    "level": 2,
    "start_page": 162,
    "end_page": 161,
    "page_count": 0,
    "id": 61,
    "parent_id": 51,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 162,
    "end_page": 164,
    "page_count": 3,
    "id": 62,
    "parent_id": 51,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Part 2â€”Scalability",
    "level": 0,
    "start_page": 165,
    "end_page": 272,
    "page_count": 108,
    "id": 63,
    "parent_id": null,
    "children_ids": [
      64,
      65,
      73,
      80,
      95,
      102
    ],
    "is_added_node": false
  },
  {
    "title": "Part 2 Introduction",
    "level": 1,
    "start_page": 165,
    "end_page": 169,
    "page_count": 5,
    "id": 64,
    "parent_id": 63,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "7 Basic data validation",
    "level": 1,
    "start_page": 169,
    "end_page": 190,
    "page_count": 22,
    "id": 65,
    "parent_id": 63,
    "children_ids": [
      66,
      67,
      68,
      69,
      70,
      71,
      72
    ],
    "is_added_node": false
  },
  {
    "title": "7 Introduction",
    "level": 2,
    "start_page": 169,
    "end_page": 170,
    "page_count": 2,
    "id": 66,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "7.1 Data validation in DOP",
    "level": 2,
    "start_page": 170,
    "end_page": 170,
    "page_count": 1,
    "id": 67,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "7.2 JSON Schema in a nutshell",
    "level": 2,
    "start_page": 171,
    "end_page": 176,
    "page_count": 6,
    "id": 68,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "7.3 Schema flexibility and strictness",
    "level": 2,
    "start_page": 177,
    "end_page": 181,
    "page_count": 5,
    "id": 69,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "7.4 Schema composition",
    "level": 2,
    "start_page": 182,
    "end_page": 185,
    "page_count": 4,
    "id": 70,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "7.5 Details about data validation failures",
    "level": 2,
    "start_page": 186,
    "end_page": 188,
    "page_count": 3,
    "id": 71,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 189,
    "end_page": 190,
    "page_count": 2,
    "id": 72,
    "parent_id": 65,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "8 Advanced concurrency control",
    "level": 1,
    "start_page": 191,
    "end_page": 202,
    "page_count": 12,
    "id": 73,
    "parent_id": 63,
    "children_ids": [
      74,
      75,
      76,
      77,
      78,
      79
    ],
    "is_added_node": false
  },
  {
    "title": "8 Introduction",
    "level": 2,
    "start_page": 191,
    "end_page": 192,
    "page_count": 2,
    "id": 74,
    "parent_id": 73,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "8.1 The complexity of locks",
    "level": 2,
    "start_page": 192,
    "end_page": 192,
    "page_count": 1,
    "id": 75,
    "parent_id": 73,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "8.2 Thread-safe counter with atoms",
    "level": 2,
    "start_page": 193,
    "end_page": 197,
    "page_count": 5,
    "id": 76,
    "parent_id": 73,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "8.3 Thread-safe cache with atoms",
    "level": 2,
    "start_page": 198,
    "end_page": 199,
    "page_count": 2,
    "id": 77,
    "parent_id": 73,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "8.4 State management with atoms",
    "level": 2,
    "start_page": 200,
    "end_page": 201,
    "page_count": 2,
    "id": 78,
    "parent_id": 73,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 202,
    "end_page": 202,
    "page_count": 1,
    "id": 79,
    "parent_id": 73,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9 Persistent data structures",
    "level": 1,
    "start_page": 203,
    "end_page": 224,
    "page_count": 22,
    "id": 80,
    "parent_id": 63,
    "children_ids": [
      81,
      82,
      83,
      84,
      88,
      94
    ],
    "is_added_node": false
  },
  {
    "title": "9 Introduction",
    "level": 2,
    "start_page": 203,
    "end_page": 204,
    "page_count": 2,
    "id": 81,
    "parent_id": 80,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "9.1 The need for persistent data structures",
    "level": 2,
    "start_page": 203,
    "end_page": 205,
    "page_count": 3,
    "id": 82,
    "parent_id": 80,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.2 The efficiency of persistent data structures",
    "level": 2,
    "start_page": 206,
    "end_page": 211,
    "page_count": 6,
    "id": 83,
    "parent_id": 80,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.3 Persistent data structures libraries",
    "level": 2,
    "start_page": 212,
    "end_page": 215,
    "page_count": 4,
    "id": 84,
    "parent_id": 80,
    "children_ids": [
      85,
      86,
      87
    ],
    "is_added_node": false
  },
  {
    "title": "9.3 Introduction",
    "level": 3,
    "start_page": 212,
    "end_page": 213,
    "page_count": 2,
    "id": 85,
    "parent_id": 84,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "9.3.1 Persistent data structures in Java",
    "level": 3,
    "start_page": 212,
    "end_page": 213,
    "page_count": 2,
    "id": 86,
    "parent_id": 84,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.3.2 Persistent data structures in JavaScript",
    "level": 3,
    "start_page": 214,
    "end_page": 215,
    "page_count": 2,
    "id": 87,
    "parent_id": 84,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.4 Persistent data structures in action",
    "level": 2,
    "start_page": 216,
    "end_page": 222,
    "page_count": 7,
    "id": 88,
    "parent_id": 80,
    "children_ids": [
      89,
      90,
      91,
      92,
      93
    ],
    "is_added_node": false
  },
  {
    "title": "9.4 Introduction",
    "level": 3,
    "start_page": 216,
    "end_page": 217,
    "page_count": 2,
    "id": 89,
    "parent_id": 88,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "9.4.1 Writing queries with persistent data structures",
    "level": 3,
    "start_page": 216,
    "end_page": 218,
    "page_count": 3,
    "id": 90,
    "parent_id": 88,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.4.2 Writing mutations with persistent data structures",
    "level": 3,
    "start_page": 219,
    "end_page": 219,
    "page_count": 1,
    "id": 91,
    "parent_id": 88,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.4.3 Serialization and deserialization",
    "level": 3,
    "start_page": 220,
    "end_page": 220,
    "page_count": 1,
    "id": 92,
    "parent_id": 88,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "9.4.4 Structural diff",
    "level": 3,
    "start_page": 221,
    "end_page": 222,
    "page_count": 2,
    "id": 93,
    "parent_id": 88,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 223,
    "end_page": 224,
    "page_count": 2,
    "id": 94,
    "parent_id": 80,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "10 Database operations",
    "level": 1,
    "start_page": 225,
    "end_page": 247,
    "page_count": 23,
    "id": 95,
    "parent_id": 63,
    "children_ids": [
      96,
      97,
      98,
      99,
      100,
      101
    ],
    "is_added_node": false
  },
  {
    "title": "10 Introduction",
    "level": 2,
    "start_page": 225,
    "end_page": 226,
    "page_count": 2,
    "id": 96,
    "parent_id": 95,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "10.1 Fetching data from the database",
    "level": 2,
    "start_page": 226,
    "end_page": 231,
    "page_count": 6,
    "id": 97,
    "parent_id": 95,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "10.2 Storing data in the database",
    "level": 2,
    "start_page": 232,
    "end_page": 234,
    "page_count": 3,
    "id": 98,
    "parent_id": 95,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "10.3 Simple data manipulation",
    "level": 2,
    "start_page": 235,
    "end_page": 238,
    "page_count": 4,
    "id": 99,
    "parent_id": 95,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "10.4 Advanced data manipulation",
    "level": 2,
    "start_page": 239,
    "end_page": 245,
    "page_count": 7,
    "id": 100,
    "parent_id": 95,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 246,
    "end_page": 247,
    "page_count": 2,
    "id": 101,
    "parent_id": 95,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "11 Web services",
    "level": 1,
    "start_page": 248,
    "end_page": 272,
    "page_count": 25,
    "id": 102,
    "parent_id": 63,
    "children_ids": [
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      110,
      111
    ],
    "is_added_node": false
  },
  {
    "title": "11 Introduction",
    "level": 2,
    "start_page": 248,
    "end_page": 249,
    "page_count": 2,
    "id": 103,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "11.1 Another feature request",
    "level": 2,
    "start_page": 249,
    "end_page": 249,
    "page_count": 1,
    "id": 104,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "11.2 Building the insides like the outsides",
    "level": 2,
    "start_page": 250,
    "end_page": 252,
    "page_count": 3,
    "id": 105,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "11.3 Representing a client request as a map",
    "level": 2,
    "start_page": 253,
    "end_page": 254,
    "page_count": 2,
    "id": 106,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "11.4 Representing a server response as a map",
    "level": 2,
    "start_page": 255,
    "end_page": 258,
    "page_count": 4,
    "id": 107,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "11.5 Passing information forward",
    "level": 2,
    "start_page": 259,
    "end_page": 261,
    "page_count": 3,
    "id": 108,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "11.6 Search result enrichment in action",
    "level": 2,
    "start_page": 262,
    "end_page": 271,
    "page_count": 10,
    "id": 109,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Delivering on time",
    "level": 2,
    "start_page": 272,
    "end_page": 271,
    "page_count": 0,
    "id": 110,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 272,
    "end_page": 272,
    "page_count": 1,
    "id": 111,
    "parent_id": 102,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Part 3â€”Maintainability",
    "level": 0,
    "start_page": 273,
    "end_page": 360,
    "page_count": 88,
    "id": 112,
    "parent_id": null,
    "children_ids": [
      113,
      114,
      123,
      131,
      138
    ],
    "is_added_node": false
  },
  {
    "title": "Part 3 Introduction",
    "level": 1,
    "start_page": 273,
    "end_page": 275,
    "page_count": 3,
    "id": 113,
    "parent_id": 112,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "12 Advanced data validation",
    "level": 1,
    "start_page": 275,
    "end_page": 299,
    "page_count": 25,
    "id": 114,
    "parent_id": 112,
    "children_ids": [
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122
    ],
    "is_added_node": false
  },
  {
    "title": "12 Introduction",
    "level": 2,
    "start_page": 275,
    "end_page": 276,
    "page_count": 2,
    "id": 115,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "12.1 Function arguments validation",
    "level": 2,
    "start_page": 276,
    "end_page": 282,
    "page_count": 7,
    "id": 116,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "12.2 Return value validation",
    "level": 2,
    "start_page": 283,
    "end_page": 284,
    "page_count": 2,
    "id": 117,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "12.3 Advanced data validation",
    "level": 2,
    "start_page": 285,
    "end_page": 287,
    "page_count": 3,
    "id": 118,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "12.4 Automatic generation of data model diagrams",
    "level": 2,
    "start_page": 288,
    "end_page": 289,
    "page_count": 2,
    "id": 119,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "12.5 Automatic generation of schema-based unit tests",
    "level": 2,
    "start_page": 290,
    "end_page": 296,
    "page_count": 7,
    "id": 120,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "12.6 A new gift",
    "level": 2,
    "start_page": 297,
    "end_page": 297,
    "page_count": 1,
    "id": 121,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 298,
    "end_page": 299,
    "page_count": 2,
    "id": 122,
    "parent_id": 114,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "13 Polymorphism",
    "level": 1,
    "start_page": 300,
    "end_page": 322,
    "page_count": 23,
    "id": 123,
    "parent_id": 112,
    "children_ids": [
      124,
      125,
      126,
      127,
      128,
      129,
      130
    ],
    "is_added_node": false
  },
  {
    "title": "13 Introduction",
    "level": 2,
    "start_page": 300,
    "end_page": 301,
    "page_count": 2,
    "id": 124,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "13.1 The essence of polymorphism",
    "level": 2,
    "start_page": 301,
    "end_page": 304,
    "page_count": 4,
    "id": 125,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "13.2 Multimethods with single dispatch",
    "level": 2,
    "start_page": 305,
    "end_page": 308,
    "page_count": 4,
    "id": 126,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "13.3 Multimethods with multiple dispatch",
    "level": 2,
    "start_page": 309,
    "end_page": 313,
    "page_count": 5,
    "id": 127,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "13.4 Multimethods with dynamic dispatch",
    "level": 2,
    "start_page": 314,
    "end_page": 316,
    "page_count": 3,
    "id": 128,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "13.5 Integrating multimethods in a production system",
    "level": 2,
    "start_page": 317,
    "end_page": 321,
    "page_count": 5,
    "id": 129,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 322,
    "end_page": 322,
    "page_count": 1,
    "id": 130,
    "parent_id": 123,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "14 Advanced data manipulation",
    "level": 1,
    "start_page": 323,
    "end_page": 338,
    "page_count": 16,
    "id": 131,
    "parent_id": 112,
    "children_ids": [
      132,
      133,
      134,
      135,
      136,
      137
    ],
    "is_added_node": false
  },
  {
    "title": "14 Introduction",
    "level": 2,
    "start_page": 323,
    "end_page": 324,
    "page_count": 2,
    "id": 132,
    "parent_id": 131,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "14.1 Updating a value in a map with eloquence",
    "level": 2,
    "start_page": 324,
    "end_page": 326,
    "page_count": 3,
    "id": 133,
    "parent_id": 131,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "14.2 Manipulating nested data",
    "level": 2,
    "start_page": 327,
    "end_page": 328,
    "page_count": 2,
    "id": 134,
    "parent_id": 131,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "14.3 Using the best tool for the job",
    "level": 2,
    "start_page": 329,
    "end_page": 332,
    "page_count": 4,
    "id": 135,
    "parent_id": 131,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "14.4 Unwinding at ease",
    "level": 2,
    "start_page": 333,
    "end_page": 337,
    "page_count": 5,
    "id": 136,
    "parent_id": 131,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 338,
    "end_page": 338,
    "page_count": 1,
    "id": 137,
    "parent_id": 131,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "15 Debugging",
    "level": 1,
    "start_page": 339,
    "end_page": 360,
    "page_count": 22,
    "id": 138,
    "parent_id": 112,
    "children_ids": [
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146
    ],
    "is_added_node": false
  },
  {
    "title": "15 Introduction",
    "level": 2,
    "start_page": 339,
    "end_page": 340,
    "page_count": 2,
    "id": 139,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "15.1 Determinism in programming",
    "level": 2,
    "start_page": 340,
    "end_page": 341,
    "page_count": 2,
    "id": 140,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "15.2 Reproducibility with numbers and strings",
    "level": 2,
    "start_page": 342,
    "end_page": 345,
    "page_count": 4,
    "id": 141,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "15.3 Reproducibility with any data",
    "level": 2,
    "start_page": 346,
    "end_page": 348,
    "page_count": 3,
    "id": 142,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "15.4 Unit tests",
    "level": 2,
    "start_page": 349,
    "end_page": 356,
    "page_count": 8,
    "id": 143,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "15.5 Dealing with external data sources",
    "level": 2,
    "start_page": 357,
    "end_page": 357,
    "page_count": 1,
    "id": 144,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Farewell",
    "level": 2,
    "start_page": 358,
    "end_page": 358,
    "page_count": 1,
    "id": 145,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 2,
    "start_page": 359,
    "end_page": 360,
    "page_count": 2,
    "id": 146,
    "parent_id": 138,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Appendix Aâ€”Principles of data-oriented programming",
    "level": 0,
    "start_page": 361,
    "end_page": 391,
    "page_count": 31,
    "id": 147,
    "parent_id": null,
    "children_ids": [
      148,
      149,
      155,
      161,
      167,
      173
    ],
    "is_added_node": false
  },
  {
    "title": "Appendix A Introduction",
    "level": 1,
    "start_page": 361,
    "end_page": 363,
    "page_count": 3,
    "id": 148,
    "parent_id": 147,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "A.1 Principle #1: Separate code from data",
    "level": 1,
    "start_page": 363,
    "end_page": 372,
    "page_count": 10,
    "id": 149,
    "parent_id": 147,
    "children_ids": [
      150,
      151,
      152,
      153,
      154
    ],
    "is_added_node": false
  },
  {
    "title": "A.1 Introduction",
    "level": 2,
    "start_page": 363,
    "end_page": 364,
    "page_count": 2,
    "id": 150,
    "parent_id": 149,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "A.1.1 Illustration of Principle #1",
    "level": 2,
    "start_page": 363,
    "end_page": 364,
    "page_count": 2,
    "id": 151,
    "parent_id": 149,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.1.2 Benefits of Principle #1",
    "level": 2,
    "start_page": 365,
    "end_page": 370,
    "page_count": 6,
    "id": 152,
    "parent_id": 149,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.1.3 Cost for Principle #1",
    "level": 2,
    "start_page": 371,
    "end_page": 371,
    "page_count": 1,
    "id": 153,
    "parent_id": 149,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.1.4 Summary of Principle #1",
    "level": 2,
    "start_page": 372,
    "end_page": 372,
    "page_count": 1,
    "id": 154,
    "parent_id": 149,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.2 Principle #2: Represent data with generic data structures",
    "level": 1,
    "start_page": 373,
    "end_page": 378,
    "page_count": 6,
    "id": 155,
    "parent_id": 147,
    "children_ids": [
      156,
      157,
      158,
      159,
      160
    ],
    "is_added_node": false
  },
  {
    "title": "A.2 Introduction",
    "level": 2,
    "start_page": 373,
    "end_page": 374,
    "page_count": 2,
    "id": 156,
    "parent_id": 155,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "A.2.1 Illustration of Principle #2",
    "level": 2,
    "start_page": 373,
    "end_page": 373,
    "page_count": 1,
    "id": 157,
    "parent_id": 155,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.2.2 Benefits of Principle #2",
    "level": 2,
    "start_page": 374,
    "end_page": 374,
    "page_count": 1,
    "id": 158,
    "parent_id": 155,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.2.3 Cost for Principle #2",
    "level": 2,
    "start_page": 375,
    "end_page": 377,
    "page_count": 3,
    "id": 159,
    "parent_id": 155,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.2.4 Summary of Principle #2",
    "level": 2,
    "start_page": 378,
    "end_page": 378,
    "page_count": 1,
    "id": 160,
    "parent_id": 155,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.3 Principle #3: Data is immutable",
    "level": 1,
    "start_page": 379,
    "end_page": 382,
    "page_count": 4,
    "id": 161,
    "parent_id": 147,
    "children_ids": [
      162,
      163,
      164,
      165,
      166
    ],
    "is_added_node": false
  },
  {
    "title": "A.3 Introduction",
    "level": 2,
    "start_page": 379,
    "end_page": 380,
    "page_count": 2,
    "id": 162,
    "parent_id": 161,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "A.3.1 Illustration of Principle #3",
    "level": 2,
    "start_page": 379,
    "end_page": 379,
    "page_count": 1,
    "id": 163,
    "parent_id": 161,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.3.2 Benefits of Principle #3",
    "level": 2,
    "start_page": 380,
    "end_page": 381,
    "page_count": 2,
    "id": 164,
    "parent_id": 161,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.3.3 Cost for Principle #3",
    "level": 2,
    "start_page": 382,
    "end_page": 381,
    "page_count": 0,
    "id": 165,
    "parent_id": 161,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.3.4 Summary of Principle #3",
    "level": 2,
    "start_page": 382,
    "end_page": 382,
    "page_count": 1,
    "id": 166,
    "parent_id": 161,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.4 Principle #4: Separate data schema from data representation",
    "level": 1,
    "start_page": 383,
    "end_page": 390,
    "page_count": 8,
    "id": 167,
    "parent_id": 147,
    "children_ids": [
      168,
      169,
      170,
      171,
      172
    ],
    "is_added_node": false
  },
  {
    "title": "A.4 Introduction",
    "level": 2,
    "start_page": 383,
    "end_page": 384,
    "page_count": 2,
    "id": 168,
    "parent_id": 167,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "A.4.1 Illustration of Principle #4",
    "level": 2,
    "start_page": 383,
    "end_page": 384,
    "page_count": 2,
    "id": 169,
    "parent_id": 167,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.4.2 Benefits of Principle #4",
    "level": 2,
    "start_page": 385,
    "end_page": 388,
    "page_count": 4,
    "id": 170,
    "parent_id": 167,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.4.3 Cost for Principle #4",
    "level": 2,
    "start_page": 389,
    "end_page": 389,
    "page_count": 1,
    "id": 171,
    "parent_id": 167,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "A.4.4 Summary of Principle #4",
    "level": 2,
    "start_page": 390,
    "end_page": 390,
    "page_count": 1,
    "id": 172,
    "parent_id": 167,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Conclusion",
    "level": 1,
    "start_page": 391,
    "end_page": 391,
    "page_count": 1,
    "id": 173,
    "parent_id": 147,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Appendix Bâ€”Generic data access in statically-typed languages",
    "level": 0,
    "start_page": 392,
    "end_page": 408,
    "page_count": 17,
    "id": 174,
    "parent_id": null,
    "children_ids": [
      175,
      176,
      180,
      184,
      188,
      193
    ],
    "is_added_node": false
  },
  {
    "title": "Appendix B Introduction",
    "level": 1,
    "start_page": 392,
    "end_page": 393,
    "page_count": 2,
    "id": 175,
    "parent_id": 174,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "B.1 Dynamic getters for string maps",
    "level": 1,
    "start_page": 392,
    "end_page": 394,
    "page_count": 3,
    "id": 176,
    "parent_id": 174,
    "children_ids": [
      177,
      178,
      179
    ],
    "is_added_node": false
  },
  {
    "title": "B.1 Introduction",
    "level": 2,
    "start_page": 392,
    "end_page": 393,
    "page_count": 2,
    "id": 177,
    "parent_id": 176,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "B.1.1 Accessing non-nested map fields with dynamic getters",
    "level": 2,
    "start_page": 393,
    "end_page": 393,
    "page_count": 1,
    "id": 178,
    "parent_id": 176,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.1.2 Accessing nested map fields with dynamic getters",
    "level": 2,
    "start_page": 394,
    "end_page": 394,
    "page_count": 1,
    "id": 179,
    "parent_id": 176,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.2 Value getters for maps",
    "level": 1,
    "start_page": 395,
    "end_page": 397,
    "page_count": 3,
    "id": 180,
    "parent_id": 174,
    "children_ids": [
      181,
      182,
      183
    ],
    "is_added_node": false
  },
  {
    "title": "B.2 Introduction",
    "level": 2,
    "start_page": 395,
    "end_page": 396,
    "page_count": 2,
    "id": 181,
    "parent_id": 180,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "B.2.1 Accessing non-nested map fields with value getters",
    "level": 2,
    "start_page": 395,
    "end_page": 395,
    "page_count": 1,
    "id": 182,
    "parent_id": 180,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.2.2 Accessing nested map fields with value getters",
    "level": 2,
    "start_page": 396,
    "end_page": 397,
    "page_count": 2,
    "id": 183,
    "parent_id": 180,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.3 Typed getters for maps",
    "level": 1,
    "start_page": 398,
    "end_page": 400,
    "page_count": 3,
    "id": 184,
    "parent_id": 174,
    "children_ids": [
      185,
      186,
      187
    ],
    "is_added_node": false
  },
  {
    "title": "B.3 Introduction",
    "level": 2,
    "start_page": 398,
    "end_page": 399,
    "page_count": 2,
    "id": 185,
    "parent_id": 184,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "B.3.1 Accessing non-nested map fields with typed getters",
    "level": 2,
    "start_page": 398,
    "end_page": 398,
    "page_count": 1,
    "id": 186,
    "parent_id": 184,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.3.2 Accessing nested map fields with typed getters",
    "level": 2,
    "start_page": 399,
    "end_page": 400,
    "page_count": 2,
    "id": 187,
    "parent_id": 184,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.4 Generic access to class members",
    "level": 1,
    "start_page": 401,
    "end_page": 407,
    "page_count": 7,
    "id": 188,
    "parent_id": 174,
    "children_ids": [
      189,
      190,
      191,
      192
    ],
    "is_added_node": false
  },
  {
    "title": "B.4 Introduction",
    "level": 2,
    "start_page": 401,
    "end_page": 402,
    "page_count": 2,
    "id": 189,
    "parent_id": 188,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "B.4.1 Generic access to non-nested class members",
    "level": 2,
    "start_page": 401,
    "end_page": 403,
    "page_count": 3,
    "id": 190,
    "parent_id": 188,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.4.2 Generic access to nested class members",
    "level": 2,
    "start_page": 404,
    "end_page": 405,
    "page_count": 2,
    "id": 191,
    "parent_id": 188,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "B.4.3 Automatic JSON serialization of objects",
    "level": 2,
    "start_page": 406,
    "end_page": 407,
    "page_count": 2,
    "id": 192,
    "parent_id": 188,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 1,
    "start_page": 408,
    "end_page": 408,
    "page_count": 1,
    "id": 193,
    "parent_id": 174,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Appendix Câ€”Data-oriented programming: A link in the chain of programming paradigms",
    "level": 0,
    "start_page": 409,
    "end_page": 414,
    "page_count": 6,
    "id": 194,
    "parent_id": null,
    "children_ids": [
      195,
      196,
      204,
      210,
      215
    ],
    "is_added_node": false
  },
  {
    "title": "Appendix C Introduction",
    "level": 1,
    "start_page": 409,
    "end_page": 410,
    "page_count": 2,
    "id": 195,
    "parent_id": 194,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "C.1 Time line",
    "level": 1,
    "start_page": 409,
    "end_page": 410,
    "page_count": 2,
    "id": 196,
    "parent_id": 194,
    "children_ids": [
      197,
      198,
      199,
      200,
      201,
      202,
      203
    ],
    "is_added_node": false
  },
  {
    "title": "C.1 Introduction",
    "level": 2,
    "start_page": 409,
    "end_page": 410,
    "page_count": 2,
    "id": 197,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "C.1.1 1958: Lisp",
    "level": 2,
    "start_page": 409,
    "end_page": 409,
    "page_count": 1,
    "id": 198,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.1.2 1981: Values and objects",
    "level": 2,
    "start_page": 410,
    "end_page": 410,
    "page_count": 1,
    "id": 199,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.1.3 2000: Ideal hash trees",
    "level": 2,
    "start_page": 411,
    "end_page": 410,
    "page_count": 0,
    "id": 200,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.1.4 2006: Out of the Tar Pit",
    "level": 2,
    "start_page": 411,
    "end_page": 410,
    "page_count": 0,
    "id": 201,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.1.5 2007: Clojure",
    "level": 2,
    "start_page": 411,
    "end_page": 410,
    "page_count": 0,
    "id": 202,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.1.6 2009: Immutability for all",
    "level": 2,
    "start_page": 411,
    "end_page": 410,
    "page_count": 0,
    "id": 203,
    "parent_id": 196,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.2 DOP principles as best practices",
    "level": 1,
    "start_page": 411,
    "end_page": 412,
    "page_count": 2,
    "id": 204,
    "parent_id": 194,
    "children_ids": [
      205,
      206,
      207,
      208,
      209
    ],
    "is_added_node": false
  },
  {
    "title": "C.2 Introduction",
    "level": 2,
    "start_page": 412,
    "end_page": 413,
    "page_count": 2,
    "id": 205,
    "parent_id": 204,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "C.2.1 Principle #1: Separate code from data",
    "level": 2,
    "start_page": 412,
    "end_page": 411,
    "page_count": 0,
    "id": 206,
    "parent_id": 204,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.2.2 Principle #2: Represent data with generic data structures",
    "level": 2,
    "start_page": 412,
    "end_page": 411,
    "page_count": 0,
    "id": 207,
    "parent_id": 204,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.2.3 Principle #3: Data is immutable",
    "level": 2,
    "start_page": 412,
    "end_page": 412,
    "page_count": 1,
    "id": 208,
    "parent_id": 204,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.2.4 Principle #4: Separate data schema from data representation",
    "level": 2,
    "start_page": 413,
    "end_page": 412,
    "page_count": 0,
    "id": 209,
    "parent_id": 204,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.3 DOP and other data-related paradigms",
    "level": 1,
    "start_page": 413,
    "end_page": 413,
    "page_count": 1,
    "id": 210,
    "parent_id": 194,
    "children_ids": [
      211,
      212,
      213,
      214
    ],
    "is_added_node": false
  },
  {
    "title": "C.3 Introduction",
    "level": 2,
    "start_page": 413,
    "end_page": 414,
    "page_count": 2,
    "id": 211,
    "parent_id": 210,
    "children_ids": [],
    "is_added_node": true
  },
  {
    "title": "C.3.1 Data-oriented design",
    "level": 2,
    "start_page": 414,
    "end_page": 413,
    "page_count": 0,
    "id": 212,
    "parent_id": 210,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.3.2 Data-driven programming",
    "level": 2,
    "start_page": 414,
    "end_page": 413,
    "page_count": 0,
    "id": 213,
    "parent_id": 210,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "C.3.3 Data-oriented programming (DOP)",
    "level": 2,
    "start_page": 414,
    "end_page": 413,
    "page_count": 0,
    "id": 214,
    "parent_id": 210,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Summary",
    "level": 1,
    "start_page": 414,
    "end_page": 414,
    "page_count": 1,
    "id": 215,
    "parent_id": 194,
    "children_ids": [],
    "is_added_node": false
  },
  {
    "title": "Appendix Dâ€”Lodash reference",
    "level": 0,
    "start_page": 415,
    "end_page": 418,
    "page_count": 4,
    "id": 216,
    "parent_id": null,
    "children_ids": [],
    "is_added_node": false
  }
]